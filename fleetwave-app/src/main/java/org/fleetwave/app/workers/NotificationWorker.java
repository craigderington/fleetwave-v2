package org.fleetwave.app.workers;
import org.fleetwave.app.notif.*; import org.fleetwave.domain.*; import org.fleetwave.domain.repo.NotificationRepository; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.scheduling.annotation.Scheduled; import org.springframework.stereotype.Component; import java.time.OffsetDateTime;
@Component public class NotificationWorker {
  private final NotificationRepository notifications; private final EmailSender email; private final SmsSender sms;
  @Autowired public NotificationWorker(NotificationRepository n, EmailSender e, SmsSender s){ notifications=n; email=e; sms=s; }
  @Scheduled(fixedDelay=15000) public void deliver(){ for (Notification n: notifications.findTop50ByStatusOrderByLastAttemptAtAsc(Notification.Status.PENDING)){ try{ switch(n.getChannel()){ case EMAIL -> email.send(new EmailMessage("noreply@tenant.local", n.getDestination(), "FleetWave Alert", null, "Alert", null)); case SMS -> sms.send(n.getDestination(),"FleetWave alert"); case WEBHOOK -> {} } n.setStatus(Notification.Status.SENT);} catch(Exception ex){ n.setStatus(Notification.Status.FAILED);} finally { n.setAttempts(n.getAttempts()+1); n.setLastAttemptAt(OffsetDateTime.now()); notifications.save(n);} } }
}