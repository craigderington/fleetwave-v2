package org.fleetwave.web.api; import org.fleetwave.domain.*; import org.fleetwave.domain.repo.*; import org.fleetwave.web.api.dto.WorkOrderDtos.CreateWorkOrder; import org.springframework.web.bind.annotation.*; import java.util.*; @RestController @RequestMapping("/api/workorders") public class WorkOrderController{ private final WorkOrderRepository repo; private final RadioRepository radios; public WorkOrderController(WorkOrderRepository r, RadioRepository radios){ this.repo=r; this.radios=radios; } @GetMapping public java.util.List<WorkOrder> list(){ return repo.findAll(); } @PostMapping public WorkOrder create(@RequestBody CreateWorkOrder b){ WorkOrder w=new WorkOrder(); w.setId(java.util.UUID.randomUUID()); Radio r=radios.findById(b.radioId).orElseThrow(); w.setRadio(r); w.setTitle(b.title); w.setDescription(b.description); w.setDueAt(b.dueAt); w.setCreatedBy(b.createdBy); return repo.save(w);} @PostMapping("/{id}/status") public WorkOrder setStatus(@PathVariable java.util.UUID id, @RequestParam String status){ WorkOrder w=repo.findById(id).orElseThrow(); w.setStatus(WorkOrder.Status.valueOf(status)); if(w.getStatus()==WorkOrder.Status.DONE){ w.setClosedAt(java.time.OffsetDateTime.now()); } return repo.save(w);} }